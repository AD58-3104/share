// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: infoshare.proto

#include "infoshare.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace CitbrainsMessage {
constexpr Object::Object(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : robot_side_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , flags_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pos_x_(0)
  , pos_y_(0)
  , pos_th_(0){}
struct ObjectDefaultTypeInternal {
  constexpr ObjectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ObjectDefaultTypeInternal() {}
  union {
    Object _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ObjectDefaultTypeInternal _Object_default_instance_;
constexpr SharingData::SharingData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : our_robot_gl_()
  , enemy_robot_gl_()
  , black_pole_gl_()
  , target_pos_vec_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cf_own_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cf_ball_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fps_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , voltage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , temperature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , highest_servo_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , current_behavior_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , is_detect_ball_(false){}
struct SharingDataDefaultTypeInternal {
  constexpr SharingDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SharingDataDefaultTypeInternal() {}
  union {
    SharingData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SharingDataDefaultTypeInternal _SharingData_default_instance_;
}  // namespace CitbrainsMessage
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_infoshare_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_infoshare_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_infoshare_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_infoshare_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, robot_side_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, pos_x_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, pos_y_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, pos_th_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::Object, flags_),
  0,
  2,
  3,
  4,
  1,
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, id_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, cf_own_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, cf_ball_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, status_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, fps_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, voltage_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, temperature_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, highest_servo_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, command_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, current_behavior_name_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, is_detect_ball_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, our_robot_gl_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, enemy_robot_gl_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, black_pole_gl_),
  PROTOBUF_FIELD_OFFSET(::CitbrainsMessage::SharingData, target_pos_vec_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::CitbrainsMessage::Object)},
  { 15, 35, sizeof(::CitbrainsMessage::SharingData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CitbrainsMessage::_Object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CitbrainsMessage::_SharingData_default_instance_),
};

const char descriptor_table_protodef_infoshare_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017infoshare.proto\022\020CitbrainsMessage\"Y\n\006O"
  "bject\022\022\n\nrobot_side\030\001 \001(\014\022\r\n\005pos_x\030\002 \001(\021"
  "\022\r\n\005pos_y\030\003 \001(\021\022\016\n\006pos_th\030\004 \001(\021\022\r\n\005flags"
  "\030\005 \001(\014\"\241\003\n\013SharingData\022\n\n\002id\030\001 \001(\014\022\016\n\006cf"
  "_own\030\002 \001(\014\022\017\n\007cf_ball\030\003 \001(\014\022\016\n\006status\030\004 "
  "\001(\014\022\013\n\003fps\030\005 \001(\014\022\017\n\007voltage\030\006 \001(\014\022\023\n\013tem"
  "perature\030\007 \001(\014\022\025\n\rhighest_servo\030\010 \001(\014\022\017\n"
  "\007command\030\t \001(\014\022\035\n\025current_behavior_name\030"
  "\n \001(\014\022\026\n\016is_detect_ball\030\013 \001(\010\022.\n\014our_rob"
  "ot_gl\030\014 \003(\0132\030.CitbrainsMessage.Object\0220\n"
  "\016enemy_robot_gl\030\r \003(\0132\030.CitbrainsMessage"
  ".Object\022/\n\rblack_pole_gl\030\016 \003(\0132\030.Citbrai"
  "nsMessage.Object\0220\n\016target_pos_vec\030\017 \003(\013"
  "2\030.CitbrainsMessage.ObjectB\002H\002"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_infoshare_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_infoshare_2eproto = {
  false, false, 550, descriptor_table_protodef_infoshare_2eproto, "infoshare.proto", 
  &descriptor_table_infoshare_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_infoshare_2eproto::offsets,
  file_level_metadata_infoshare_2eproto, file_level_enum_descriptors_infoshare_2eproto, file_level_service_descriptors_infoshare_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_infoshare_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_infoshare_2eproto);
  return descriptor_table_infoshare_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_infoshare_2eproto(&descriptor_table_infoshare_2eproto);
namespace CitbrainsMessage {

// ===================================================================

class Object::_Internal {
 public:
  using HasBits = decltype(std::declval<Object>()._has_bits_);
  static void set_has_robot_side(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pos_x(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pos_y(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pos_th(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Object::Object(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CitbrainsMessage.Object)
}
Object::Object(const Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_side_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_robot_side()) {
    robot_side_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_robot_side(), 
      GetArena());
  }
  flags_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_flags()) {
    flags_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_flags(), 
      GetArena());
  }
  ::memcpy(&pos_x_, &from.pos_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_th_) -
    reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_th_));
  // @@protoc_insertion_point(copy_constructor:CitbrainsMessage.Object)
}

void Object::SharedCtor() {
robot_side_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
flags_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pos_x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pos_th_) -
    reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_th_));
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:CitbrainsMessage.Object)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Object::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  robot_side_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Object::ArenaDtor(void* object) {
  Object* _this = reinterpret_cast< Object* >(object);
  (void)_this;
}
void Object::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Object::InternalSwap(Object* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Object::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SharingData::_Internal {
 public:
  using HasBits = decltype(std::declval<SharingData>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cf_own(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cf_ball(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_fps(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_voltage(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_temperature(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_highest_servo(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_command(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_current_behavior_name(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_detect_ball(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

SharingData::SharingData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  our_robot_gl_(arena),
  enemy_robot_gl_(arena),
  black_pole_gl_(arena),
  target_pos_vec_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CitbrainsMessage.SharingData)
}
SharingData::SharingData(const SharingData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      our_robot_gl_(from.our_robot_gl_),
      enemy_robot_gl_(from.enemy_robot_gl_),
      black_pole_gl_(from.black_pole_gl_),
      target_pos_vec_(from.target_pos_vec_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  cf_own_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cf_own()) {
    cf_own_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cf_own(), 
      GetArena());
  }
  cf_ball_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cf_ball()) {
    cf_ball_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cf_ball(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_status()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  fps_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fps()) {
    fps_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fps(), 
      GetArena());
  }
  voltage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_voltage()) {
    voltage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_voltage(), 
      GetArena());
  }
  temperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_temperature()) {
    temperature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_temperature(), 
      GetArena());
  }
  highest_servo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_highest_servo()) {
    highest_servo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_highest_servo(), 
      GetArena());
  }
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_command()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  current_behavior_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_current_behavior_name()) {
    current_behavior_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_current_behavior_name(), 
      GetArena());
  }
  is_detect_ball_ = from.is_detect_ball_;
  // @@protoc_insertion_point(copy_constructor:CitbrainsMessage.SharingData)
}

void SharingData::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cf_own_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cf_ball_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
fps_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
voltage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
temperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
highest_servo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
current_behavior_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
is_detect_ball_ = false;
}

SharingData::~SharingData() {
  // @@protoc_insertion_point(destructor:CitbrainsMessage.SharingData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SharingData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cf_own_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cf_ball_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fps_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  voltage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  temperature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  highest_servo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_behavior_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SharingData::ArenaDtor(void* object) {
  SharingData* _this = reinterpret_cast< SharingData* >(object);
  (void)_this;
}
void SharingData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SharingData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SharingData::InternalSwap(SharingData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata SharingData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CitbrainsMessage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CitbrainsMessage::Object* Arena::CreateMaybeMessage< ::CitbrainsMessage::Object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CitbrainsMessage::Object >(arena);
}
template<> PROTOBUF_NOINLINE ::CitbrainsMessage::SharingData* Arena::CreateMaybeMessage< ::CitbrainsMessage::SharingData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CitbrainsMessage::SharingData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
